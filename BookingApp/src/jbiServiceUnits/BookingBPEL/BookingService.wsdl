<?xml version="1.0" encoding="UTF-8"?>
<definitions name="BookingService" targetNamespace="http://bookingservice.ws"
    xmlns="http://schemas.xmlsoap.org/wsdl/"
    xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
    xmlns:bss="http://bookingserviceSchema.ws"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://bookingservice.ws" xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" xmlns:ns0="http://dtu.dk/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns1="http://bookingserviceSchema.ws" xmlns:vprop="http://docs.oasis-open.org/wsbpel/2.0/varprop">
    <types>
        <xsd:schema>
            <xsd:import namespace="http://dtu.dk/" schemaLocation="http://localhost:8080/AirlineService/AirlineWebService?xsd=1"/>
        </xsd:schema>
        <xsd:schema targetNamespace="http://bookingservice.ws" xmlns:tns="http://bookingservice.ws">
            <xsd:import namespace="http://dtu.dk/" schemaLocation="localhost_8080/HotelService/HotelWebService.xsd_1.xsd"/>
            <xsd:import schemaLocation="BookingService.xsd" namespace="http://bookingserviceSchema.ws"/>
            <xsd:complexType name="hotelList">
                <xsd:complexContent>
                    <xsd:extension xmlns:ns="http://bookingserviceSchema.ws" base="ns1:hotelListType">
                        <xsd:sequence/>
                    </xsd:extension>
                </xsd:complexContent>
            </xsd:complexType>
            <xsd:complexType name="flightList">
                <xsd:complexContent>
                    <xsd:extension xmlns:ns="http://bookingserviceSchema.ws" base="ns1:flightListType">
                        <xsd:sequence/>
                    </xsd:extension>
                </xsd:complexContent>
            </xsd:complexType>
            <xsd:complexType name="itineryList">
                <xsd:complexContent>
                    <xsd:extension xmlns:ns="http://bookingserviceSchema.ws" base="ns1:itineryType">
                        <xsd:sequence/>
                    </xsd:extension>
                </xsd:complexContent>
            </xsd:complexType>
        </xsd:schema>
    </types>
    <message name="CreateItineraryRequest">
        <part name="itineraryId" type="xsd:string"/>
    </message>
    <message name="CreateItineraryResponse">
        <part name="itineraryIdResponse" type="xsd:string"/>
    </message>
    <message name="GetHotelsRequest">
        <part name="city" type="xsd:string"/>
        <part name="arrival" type="xsd:string"/>
        <part name="departure" type="xsd:string"/>
        <part name="itineraryId" type="xsd:string"/>
    </message>
    <message name="GetHotelsResponse">
        <part name="hotelList" type="ns0:getHotelsResponse"/>
    </message>
    <message name="GetFlightsRequest">
        <part name="origin" type="xsd:string"/>
        <part name="destination" type="xsd:string"/>
        <part name="startDate" type="xsd:string"/>
        <part name="itineraryId" type="xsd:string"/>
    </message>
    <message name="GetFlightsResponse">
        <part name="flightList" type="ns0:getFlightsResponse"/>
    </message>
    <message name="AddHotelRequest">
        <part name="bookingNumber" type="xsd:string"/>
        <part name="itineraryId" type="xsd:string"/>
    </message>
    <message name="AddHotelResponse">
        <part name="status" type="tns:hotelList"/>
    </message>
    <message name="AddFlightRequest">
        <part name="bookingNumber" type="xsd:string"/>
        <part name="itineraryId" type="xsd:string"/>
    </message>
    <message name="AddFlightResponse">
        <part name="status" type="tns:flightList"/>
    </message>
    <message name="CancelItineraryRequest">
        <part name="itineraryId" type="xsd:string"/>
    </message>
    <message name="CancelItineraryResponse">
        <part name="status" type="tns:hotelList"/>
    </message>
    <message name="ListItineraryRequest">
        <part name="itineraryId" type="xsd:string"/>
    </message>
    <message name="ListItineraryResponse">
        <part name="status" type="tns:itineryList"/>
    </message>
    <message name="BookItineraryRequest">
        <part name="itineraryId" type="xsd:string"/>
        <part name="name" type="xsd:string"/>
        <part name="number" type="xsd:integer"/>
        <part name="month" type="xsd:integer"/>
        <part name="year" type="xsd:integer"/>
    </message>
    <message name="BookItineraryResponse">
        <part name="status" type="tns:hotelList"/>
    </message>
    <portType name="BookingServicePortType">
        <operation name="CreateItinerary">
            <input name="CreateItineraryRequest" message="tns:CreateItineraryRequest"/>
            <output name="CreateItineraryResponse" message="tns:CreateItineraryResponse"/>
        </operation>
        <operation name="GetHotels">
            <input name="GetHotelsRequest" message="tns:GetHotelsRequest"/>
            <output name="GetHotelsResponse" message="tns:GetHotelsResponse"/>
        </operation>
        <operation name="GetFlights">
            <input name="GetFlightsRequest" message="tns:GetFlightsRequest"/>
            <output name="GetFlightsResponse" message="tns:GetFlightsResponse"/>
        </operation>
        <operation name="AddHotel">
            <input name="AddHotelRequest" message="tns:AddHotelRequest"/>
            <output name="AddHotelResponse" message="tns:AddHotelResponse"/>
        </operation>
        <operation name="AddFlight">
            <input name="AddFlightRequest" message="tns:AddFlightRequest"/>
            <output name="AddFlightResponse" message="tns:AddFlightResponse"/>
        </operation>
        
        <operation name="CancelItinerary">
            <input name="CancelItineraryRequest" message="tns:CancelItineraryRequest"/>
            <output name="CancelItineraryResponse" message="tns:CancelItineraryResponse"/>
        </operation>
        <operation name="ListItinerary">
            <input name="ListItineraryRequest" message="tns:ListItineraryRequest"/>
            <output name="ListItineraryResponse" message="tns:ListItineraryResponse"/>
        </operation>
        <operation name="BookItinerary">
            <input name="BookItineraryRequest" message="tns:BookItineraryRequest"/>
            <output name="BookItineraryResponse" message="tns:BookItineraryResponse"/>
        </operation>
    </portType>
    <binding name="BookingServicePortTypeBinding" type="tns:BookingServicePortType">
        <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
        <operation name="CreateItinerary">
            <soap:operation/>
            <input name="CreateItineraryRequest">
                <soap:body use="literal" namespace="http://bookingservice.ws"/>
            </input>
            <output name="CreateItineraryResponse">
                <soap:body use="literal" namespace="http://bookingservice.ws"/>
            </output>
        </operation>
        <operation name="GetHotels">
            <soap:operation/>
            <input name="GetHotelsRequest">
                <soap:body use="literal" namespace="http://bookingservice.ws"/>
            </input>
            <output name="GetHotelsResponse">
                <soap:body use="literal" namespace="http://bookingservice.ws"/>
            </output>
        </operation>
        <operation name="GetFlights">
            <soap:operation/>
            <input name="GetFlightsRequest">
                <soap:body use="literal" namespace="http://bookingservice.ws"/>
            </input>
            <output name="GetFlightsResponse">
                <soap:body use="literal" namespace="http://bookingservice.ws"/>
            </output>
        </operation>
        <operation name="CancelItinerary">
            <soap:operation/>
            <input name="CancelItineraryRequest">
                <soap:body use="literal" namespace="http://bookingservice.ws"/>
            </input>
            <output name="CancelItineraryResponse">
                <soap:body use="literal" namespace="http://bookingservice.ws"/>
            </output>
        </operation>
        <operation name="AddHotel">
            <soap:operation/>
            <input name="AddHotelRequest">
                <soap:body use="literal" namespace="http://bookingservice.ws"/>
            </input>
            <output name="AddHotelResponse">
                <soap:body use="literal" namespace="http://bookingservice.ws"/>
            </output>
        </operation>
        <operation name="AddFlight">
            <soap:operation/>
            <input name="AddFlightRequest">
                <soap:body use="literal" namespace="http://bookingservice.ws"/>
            </input>
            <output name="AddFlightResponse">
                <soap:body use="literal" namespace="http://bookingservice.ws"/>
            </output>
        </operation>
        <operation name="ListItinerary">
            <soap:operation/>
            <input name="ListItineraryRequest">
                <soap:body use="literal" namespace="http://bookingservice.ws"/>
            </input>
            <output name="ListItineraryResponse">
                <soap:body use="literal" namespace="http://bookingservice.ws"/>
            </output>
        </operation>
        <operation name="BookItinerary">
            <soap:operation/>
            <input name="BookItineraryRequest">
                <soap:body use="literal" namespace="http://bookingservice.ws"/>
            </input>
            <output name="BookItineraryResponse">
                <soap:body use="literal" namespace="http://bookingservice.ws"/>
            </output>
        </operation>
    </binding>
    <service name="service1">
        <port name="BookingServicePortTypeBindingPort" binding="tns:BookingServicePortTypeBinding">
            <soap:address location="http://localhost:${HttpDefaultPort}/service"/>
        </port>
    </service>
    <plnk:partnerLinkType name="BookingService">
        <!-- A partner link type is automatically generated when a new port type is added. Partner link types are used by BPEL processes. 
In a BPEL process, a partner link represents the interaction between the BPEL process and a partner service. Each partner link is associated with a partner link type.
A partner link type characterizes the conversational relationship between two services. The partner link type can have one or two roles.-->
        <plnk:role name="BookingServicePortTypeRole" portType="tns:BookingServicePortType"/>
    </plnk:partnerLinkType>
    <vprop:property name="itineraryId" type="ns1:itineraryIdType"/>
    <vprop:propertyAlias propertyName="tns:itineraryId" messageType="tns:CreateItineraryRequest" part="itineraryId"/>
    <vprop:propertyAlias propertyName="tns:itineraryId" messageType="tns:GetHotelsRequest" part="itineraryId"/>
    <vprop:propertyAlias propertyName="tns:itineraryId" messageType="tns:AddHotelRequest" part="itineraryId"/>
    <vprop:propertyAlias propertyName="tns:itineraryId" messageType="tns:AddFlightRequest" part="itineraryId"/>
    <vprop:propertyAlias propertyName="tns:itineraryId" messageType="tns:BookItineraryRequest" part="itineraryId"/>
    <vprop:propertyAlias propertyName="tns:itineraryId" messageType="tns:ListItineraryRequest" part="itineraryId"/>
    <vprop:propertyAlias propertyName="tns:itineraryId" messageType="tns:GetFlightsRequest" part="itineraryId"/>
    <vprop:propertyAlias propertyName="tns:itineraryId" messageType="tns:CancelItineraryRequest" part="itineraryId"/>
</definitions>
